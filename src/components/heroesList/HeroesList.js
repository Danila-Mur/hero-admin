import { useHttp } from "../../hooks/http.hook";
import { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";

import {
  heroesDeleted,
  heroesDeleting,
  heroesDeletingError,
  heroesFetched,
  heroesFetching,
  heroesFetchingError,
} from "../../actions";
import toast from "react-hot-toast";
import { HeroesListItem } from "../heroesListItem/HeroesListItem";
import { Spinner } from "../spinner/Spinner";

// ++
// –ó–∞–¥–∞—á–∞ –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:
// –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ "–∫—Ä–µ—Å—Ç–∏–∫" –∏–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
// –£—Å–ª–æ–∂–Ω–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞:
// –£–¥–∞–ª–µ–Ω–∏–µ –∏–¥–µ—Ç –∏ —Å json —Ñ–∞–π–ª–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –º–µ—Ç–æ–¥–∞ DELETE

export const HeroesList = () => {
  const { heroes, heroesLoadingStatus } = useSelector((state) => state);
  const dispatch = useDispatch();
  const { request } = useHttp();

  useEffect(() => {
    dispatch(heroesFetching());
    request("http://localhost:3001/heroes")
      .then((data) => dispatch(heroesFetched(data)))
      .catch(() => dispatch(heroesFetchingError()));

    // eslint-disable-next-line
  }, []);

  const onDeleteHandle = (id) => {
    dispatch(heroesDeleting());

    try {
      request(
        `http://localhost:3001/heroes/${id}`,
        "DELETE",
        JSON.stringify({ id }),
      )
        .then(() => {
          dispatch(heroesDeleted(id));
          toast.success("–ì–µ—Ä–æ–π —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!", {
            icon: "üëè",
          });
        })
        .catch(() => {
          dispatch(heroesDeletingError());
          toast.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏!");
        });
    } catch (e) {
      dispatch(heroesDeletingError());
      toast.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏!");
      console.error(e);
    }
  };

  if (heroesLoadingStatus === "loading") {
    return <Spinner />;
  } else if (heroesLoadingStatus === "error") {
    return <h5 className="text-center mt-5">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h5>;
  }

  const renderHeroesList = (arr) => {
    if (arr.length === 0) {
      return <h5 className="text-center mt-5">–ì–µ—Ä–æ–µ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</h5>;
    }

    return arr.map(({ ...props }) => {
      return (
        <HeroesListItem
          key={props.id}
          {...props}
          onDeleteHandle={onDeleteHandle}
        />
      );
    });
  };

  const elements = renderHeroesList(heroes);
  return <ul>{elements}</ul>;
};
